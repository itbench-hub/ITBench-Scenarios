---
- name: Retrieve information on workload
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: "{{ spec.workload.kind }}"
    name: "{{ spec.workload.name }}"
    namespace: "{{ spec.workload.namespace }}"
    kubeconfig: "{{ faults_cluster.kubeconfig }}"
  register: faults_workload_info

- name: Update port of first _ADDR variable to 0000
  ansible.builtin.set_fact:
    faults_updated_env_vars: |
      {{
        (
          faults_updated_env_vars | default([])
        ) +
        (
          {
            'name': env_var.name
            'value': faults_modified_env_vars[env_var.name]
          }
          if env_var.name in faults_modified_env_vars else env_var
        )
      }}
  loop: "{{ faults_current_deployment.resources[0].spec.template.spec.containers[0].env }}"
  loop_control:
    label: env/{{ env_var.name }}
    loop_var: env_var
  when:
    - faults_workload_info.resources | length > 1
    - faults_workload_info.resources.spec.template.spec.containers | length > 1
  vars:
    faults_modified_env_vars: "{{ spec.workload.env | items2dict(key_name='name') }}"

- name: Inject fault (modify environment vars)
  kubernetes.core.k8s_json_patch:
    api_version: apps/v1
    kind: "{{ spec.workload.kind }}"
    kubeconfig: "{{ faults_cluster.kubeconfig }}"
    name: "{{ spec.workload.name }}"
    namespace: "{{ spec.workload.namespace }}"
    patch:
      - op: replace
        path: /spec/template/spec/containers/0/env
        value: "{{ faults_updated_env_vars }}"
