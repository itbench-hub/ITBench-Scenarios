---
- name: Create ResourceQuota with hard memory limits
  kubernetes.core.k8s:
    kubeconfig: "{{ faults_cluster.kubeconfig }}"
    resource_definition:
      apiVersion: v1
      kind: ResourceQuota
      metadata:
        name: "{{ namespace.name }}-resource-quota"
        namespace: "{{ namespace.name }}"
      spec:
        hard:
          memory: 2Gi
    state: present
  loop: "{{ targets.namespaces }}"
  loop_control:
    label: "namespace/{{ namespace.name }}"
    loop_var: namespace

- name: Get current deployment information for specific deployments
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: "{{ item.name }}"
    namespace: "{{ item.namespace }}"
  environment:
    KUBECONFIG: "{{ faults_cluster.kubeconfig | ansible.builtin.expanduser }}"
  register: deployment_info
  loop: "{{ targets.deployments }}"
  loop_control:
    label: "{{ item.namespace }}/{{ item.name }}"

- name: Scale specific deployments to 0 except otel-collector
  kubernetes.core.k8s_scale:
    api_version: apps/v1
    kind: Deployment
    name: "{{ item.name }}"
    namespace: "{{ item.namespace }}"
    replicas: 0
    wait: true
    wait_timeout: 120
  environment:
    KUBECONFIG: "{{ faults_cluster.kubeconfig | ansible.builtin.expanduser }}"
  loop: "{{ targets.deployments }}"
  when: item.name != 'otel-collector'
  loop_control:
    label: "{{ item.name }}"

- name: Scale deployments back to original replica counts except otel-collector
  kubernetes.core.k8s_scale:
    api_version: apps/v1
    kind: Deployment
    name: "{{ item.name }}"
    namespace: "{{ item.namespace }}"
    replicas: "{{ (deployment_info.results | selectattr('item.name', 'equalto', item.name) | first).resources[0].spec.replicas }}"
    wait: false
  environment:
    KUBECONFIG: "{{ faults_cluster.kubeconfig | ansible.builtin.expanduser }}"
  failed_when: false
  loop: "{{ targets.deployments }}"
  when: item.name != 'otel-collector'
  loop_control:
    loop_var: item
    label: "{{ item.name }}: {{ (deployment_info.results | selectattr('item.name', 'equalto', item.name) | first).resources[0].spec.replicas }}"
