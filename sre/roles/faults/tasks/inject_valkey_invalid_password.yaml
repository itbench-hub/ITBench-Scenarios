---
# This fault assumes that no password is used initially

- name: Retrieve pod labels from workload
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: "{{ spec.workload.kind }}"
    kubeconfig: "{{ faults_cluster.kubeconfig }}"
    name: "{{ spec.workload.name }}"
    namespace: "{{ spec.workload.namespace }}"
  register: faults_workload_info

- name: Retrieve all pods with matching labels
  kubernetes.core.k8s_info:
    kind: Pod
    kubeconfig: "{{ faults_cluster.kubeconfig }}"
    namespace: "{{ faults_workload_info.resources[0].metadata.namespace }}"
    label_selectors: "{{ faults_workload_info.resources[0].spec.template.metadata.labels.items() | map('join', ' = ') }}"
  register: faults_pods_info
  when:
    - faults_workload_info is defined
    - faults_workload_info.resources | length == 1

- name: Change the valkey password to an invalid one
  kubernetes.core.k8s_exec:
    namespace: "{{ pod.metadata.namespace }}"
    pod: "{{ pod.metadata.name }}"
    command: valkey-cli CONFIG SET requirepass "invalid_password"
  loop: "{{ faults_pods_info.resources }}"
  loop_control:
    label: "{{ pod.kind | lower }}/{{ pod.metadata.name }}"
    loop_var: pod
  when:
    - faults_pods_info is defined

- name: Kill existing client connections and force re-connection
  kubernetes.core.k8s_exec:
    namespace: "{{ pod.metadata.namespace }}"
    pod: "{{ pod.metadata.name }}"
    command: valkey-cli -a "invalid_password" CLIENT KILL TYPE normal
  loop: "{{ faults_pods_info.resources }}"
  loop_control:
    label: "{{ pod.kind | lower }}/{{ pod.metadata.name }}"
    loop_var: pod
  when:
    - faults_pods_info is defined
