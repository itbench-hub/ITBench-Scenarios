---
- name: Load kubeconfig file
  ansible.builtin.set_fact:
    agent_kubeconfig: "{{ lookup('ansible.builtin.file', agent_cluster.kubeconfig) | from_yaml }}"

- name: Find the cluster related to the current context
  ansible.builtin.set_fact:
    agent_current_cluster: "{{ agent_kubeconfig.clusters[index] }}"
  vars:
    index: |
      {{
        lookup(
          'ansible.utils.index_of',
          agent_kubeconfig.clusters,
          'eq',
          agent_kubeconfig['current-context'],
          'name'
        )
      }}
  when:
    - index >= 0

- name: Retrieve Service Accounts for namespaces
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ServiceAccount
    kubeconfig: "{{ agent_cluster.kubeconfig }}"
    label_selectors:
      - app.kubernetes.io/component = access-provider
      - app.kubernetes.io/part-of = it-bench
  register: agent_service_account_info

- name: Create TokenRequest for each Service Account
  ansible.builtin.command:
    cmd: kubectl -n {{ sa.metadata.namespace }} create token {{ sa.metadata.name }} --duration 18h -o json
  environment:
    KUBECONFIG: "{{ agent_cluster.kubeconfig | ansible.builtin.expanduser }}"
  register: agent_token_creation_output
  changed_when: agent_token_creation_output.rc == 0
  loop: "{{ agent_service_account_info.resources }}"
  loop_control:
    label: serviceaccount/{{ sa.metadata.name }}
    loop_var: sa

- name: Map command output to TokenRequest objects
  ansible.builtin.set_fact:
    agent_token_requests: "{{ (agent_token_requests | default([])) + [output.stdout | from_json] }}"
  loop: "{{ agent_token_creation_output.results }}"
  loop_control:
    label: "command: {{ output.cmd | join(' ') }}"
    loop_var: output
  when:
    - output.rc == 0

- name: Generate contexts and users with TokenRequest
  ansible.builtin.set_fact:
    agent_contexts: |
      {{
        (
          agent_contexts | default([])
        ) +
        [
          {
            'cluster': agent_current_cluster.name,
            'user': tokenrequest.metadata.name,
            'namespace': tokenrequest.metadata.namespace
          }
        ]
      }}
    agent_users: |
      {{
        (
          agent_users | default([])
        ) +
        [
          {
            'name': 'agent',
            'user': {
              'token': tokenrequest.status.token
            }
          }
        ]
      }}
  loop: "{{ agent_token_requests }}"
  loop_control:
    label: "tokenrequest/{{ tokenrequest.metatdata.name }}"
    loop_var: tokenrequest

- name: Create restricted kubeconfig file in temporary directory
  ansible.builtin.copy:
    content: "{{ lookup('ansible.builtin.template', 'templates/kubeconfig.j2') | from_yaml | to_nice_yaml(indent=2) }}"
    dest: /tmp/restricted_config
    mode: "0644"
  vars:
    certificate_authority_data: "{{ agent_current_cluster.cluster['certificate-authority-data'] }}"
    cluster: "{{ agent_current_cluster.name }}"
    contexts: "{{ agent_contexts | default([]) }}"
    server: "{{ agent_current_cluster.cluster.server }}"
    users: "{{ agent_users | default([]) }}"
