---
- name: Retrieve Service Accounts for namespaces
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ServiceAccount
    kubeconfig: "{{ agent_cluster.kubeconfig }}"
    label_selectors:
      - app.kubernetes.io/part-of = it-bench
  register: agent_service_account_info

- name: Create TokenRequest for each Service Account
  kubernetes.core.k8s:
    kubeconfig: "{{ agent_cluster.kubeconfig }}"
    resource_definition:
      apiVersion: authentication.k8s.io/v1
      kind: TokenRequest
      metadata:
        name: "{{ sa.metadata.name }}"
        namespace: "{{ sa.metadata.namespace }}"
      spec:
        expirationSeconds: 64800 # 18h
    state: present
  loop: "{{ agent_service_account_info.resources }}"
  loop_control:
    label: serviceaccount/{{ sa.metadata.name }}
    loop_var: sa
  register: agent_token_request

- name: Load kubeconfig file
  ansible.builtin.set_fact:
    agent_kubeconfig: "{{ lookup('ansible.builtin.file', agent_cluster.kubeconfig) | from_yaml }}"

- name: Find index of current context cluster
  ansible.builtin.set_fact:
    agent_cluster_index: "{{ lookup('ansible.utils.index_of', agent_kubeconfig.clusters, 'eq', cluster, 'name') }}"
  vars:
    cluster: "{{ agent_kubeconfig['current-context'] }}"

- name: Generate contexts and users
  ansible.builtin.set_fact:
    agent_contexts: "{{ (agent_contexts | default([])) + [{'cluster': cluster, 'user': 'agent', 'namespace': result.metadata.namespace}] }}"
    agent_users: "{{ (agent_users | default([])) +[{'name': 'agent', 'user': {'token': result.status.token}}] }}"
  loop: "{{ agent_token_request.results }}"
  loop_control:
    label: tokenrequest/{{ result.metadata.name }}
    loop_var: tokenrequest
  vars:
    cluster: "{{ agent_kubeconfig['current-context'] }}"
  when:
    - kv.value != ""

- name: Create restricted kubeconfig file in temporary directory
  ansible.builtin.copy:
    content: "{{ lookup('ansible.builtin.template', 'templates/kubeconfig.j2') | from_yaml | to_nice_yaml(indent=2) }}"
    dest: /tmp/restricted_config
    mode: "0644"
  vars:
    certificate_authority_data: "{{ agent_kubeconfig.clusters[agent_cluster_index].cluster['certificate-authority-data'] }}"
    cluster: "{{ agent_kubeconfig.clusters[agent_cluster_index].name }}"
    contexts: "{{ agent_contexts }}"
    server: "{{ agent_kubeconfig.clusters[agent_cluster_index].cluster.server }}"
    users: "{{ agent_users }}"
