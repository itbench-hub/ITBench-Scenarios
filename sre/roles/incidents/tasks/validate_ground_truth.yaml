---
- name: Validate truth content
  ansible.utils.validate:
    data: "{{ incidents_ground_truth }}"
    criteria: "{{ lookup('ansible.builtin.file', 'files/schemas/ground_truth.json') | from_json }}"
    engine: ansible.utils.jsonschema
  failed_when: false
  register: incidents_truth_validation_result

- name: Display validation errors
  ansible.builtin.debug:
    var: incidents_truth_validation_result
  when:
    - incidents_truth_validation_result.errors is defined

- name: Fail validation due to errors
  ansible.builtin.fail:
    msg: Failed to validate the ground truth file. Please consult the above log to resolve error(s).
  when:
    - incidents_truth_validation_result.errors is defined

- name: Ensure all group ids are unique
  ansible.builtin.assert:
    that: (incidents_ground_truth.groups | length) == (unique_ids | length)
    fail_msg: Shared group id found. All group ids must be unique.
    success_msg: Group ids uniqueness verified.
  vars:
    unique_ids: "{{ incidents_ground_truth.groups | community.general.json_query('[*].id') | unique }}"

- name: Ensure the existence of a root cause
  ansible.builtin.assert:
    that: root_causes | length > 0
    fail_msg: No root cause listed in the groups field.
    success_msg: ({{ root_causes | length }}) root cause(s) found.
  vars:
    root_causes: "{{ incidents_ground_truth.groups | community.general.json_query('[*].root_cause') }}"

- name: Validate alert groups
  ansible.builtin.assert:
    that: alert_groups is subset(group_ids)
    fail_msg: "Unknown alert group id(s) found: {{ alert_groups | difference(group_ids) }}"
    success_msg: All alert group ids are valid.
  vars:
    alert_groups: "{{ incidents_ground_truth.alerts | community.general.json_query('[*].group_id') }}"
    group_ids: "{{ incidents_ground_truth.groups | community.general.json_query('[*].id') }}"

- name: Validate aliases
  ansible.builtin.assert:
    that: aliases is subset(group_ids)
    fail_msg: "Unknown alias id(s) found: {{ aliases | difference(group_ids) }}"
    success_msg: All aliases ids are valid.
  vars:
    aliases: "{{ incidents_ground_truth.aliases | flatten | unique }}"
    group_ids: "{{ incidents_ground_truth.groups | community.general.json_query('[*].id') }}"

- name: Validate propagation sources
  ansible.builtin.assert:
    that: sources is subset(group_ids)
    fail_msg: "Unknown sources found: {{ sources | difference(group_ids) }}"
    success_msg: All propagation sources are valid.
  vars:
    group_ids: "{{ incidents_ground_truth.groups | community.general.json_query('[*].id') }}"
    sources: "{{ incidents_ground_truth.propagations | community.general.json_query('[*].sources') }}"

- name: Validate proprogation targets
  ansible.builtin.assert:
    that: targets is subset(group_ids)
    fail_msg: "Unknown targets found: {{ targets | difference(group_ids) }}"
    success_msg: All propagation targets are valid.
  vars:
    group_ids: "{{ incidents_ground_truth.groups | community.general.json_query('[*].id') }}"
    targets: "{{ incidents_ground_truth.propagations | community.general.json_query('[*].targets') }}"
