---
- name: Pause for 600 (10 minutes) seconds for alert recording
  pause:
    seconds: 600
  when: sre_bench_runner
  tags:
    - evaluation

- name: Apply tags to tasks within included file
  ansible.builtin.include_tasks:
    file: "{{ location | dirname }}/pre_fault_removal/tasks/record_topology_information.yaml"
    apply:
      tags:
        - evaluation
  tags:
    - evaluation

- name: Ensure directory exists locally
  ansible.builtin.file:
    path: "{{ input_dir }}/{{ sre_agent_name__version_number}}/{{ incident_number}}"
    state: directory
  tags:
    - evaluation
  when: run_uuid is defined and scenario_number is defined and run_number is defined

- name: Debug all variables
  debug:
    msg:
      - "s3_bucket_name_for_results: {{ s3_bucket_name_for_results }}"
      - "sre_agent_name__version_number: {{ sre_agent_name__version_number }}"
      - "run_uuid: {{ run_uuid }}"
      - "incident_number: {{ incident_number }}"
      - "run_number: {{ run_number }}"
      - "input_dir: {{ input_dir }}"
  tags:
    - evaluation

- name: Download using AWS CLI
  ansible.builtin.command: >
   aws s3 sync
   s3://{{ s3_bucket_name_for_results | trim }}/{{ sre_agent_name__version_number }}/{{ run_uuid }}/{{incident_number }}/{{run_number}}/
   {{input_dir }}/{{ sre_agent_name__version_number }}/{{ incident_number}}
  tags:
    - evaluation


- name: Copy file from shared_workspace to incident_data
  ansible.builtin.copy:
    src: "{{ shared_workspace }}/agent_output.data"
    dest: "{{input_dir}}/{{ sre_agent_name__version_number}}/{{ incident_number }}/agent_output.json"
  tags:
    - evaluation

- name: Run evaluation
  ansible.builtin.command:
    argv:
    - "{{ venv_python }}"
    - "{{ playbook_dir }}/evaluation/generate_incident_summaries.py"
    - --incident_data={{ input_dir }}/{{ sre_agent_name__version_number}}/
    - --out_dir={{ out_dir }}
    - --ground_truth_file=ground_truths.json
    - --incident_id={{ incident_number }}
    - --bench
  register: result
  tags:
    - evaluation

- name: Pretty print the eval output
  debug:
    msg: "{{ result.stdout }}"
  tags:
    - evaluation

- name: Uninstall the Kubernetes topology mapper
  kubernetes.core.helm:
    name: "k8s-topology-manager"
    kubeconfig_path: "{{ kubeconfig }}"
    release_namespace: "kube-system"
    state: absent
  tags:
    - evaluation
