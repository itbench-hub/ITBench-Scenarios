---
- name: Get Service object and wait for LoadBalancer if applicable
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: "{{ tools_helm_releases.ingress.name }}-controller"
    namespace: "{{ tools_helm_releases.ingress.namespace }}"
    kubeconfig: "{{ tools_cluster.kubeconfig }}"
    wait: true
  register: tools_service_info
  until: >
    tools_service_info.resources[0].spec.type != "LoadBalancer" or
    (tools_service_info.resources[0].status.loadBalancer.ingress is defined)
  delay: 15
  retries: 12

- name: Extract the Ingress hostname information
  ansible.builtin.set_fact:
    tools_ingress_hostname: "{{ tools_service_loadbalancer_info.resources[0].status.loadBalancer.ingress[0].hostname }}"
  when:
    - tools_service_info.resources[0].spec.type == "LoadBalancer"
    - tools_service_loadbalancer_info.resources[0].status.loadBalancer.ingress | length > 0
    - tools_service_loadbalancer_info.resources[0].status.loadBalancer.ingress[0].hostname is defined

- name: Extract NodePort/ClusterIP endpoint (fallback for non-LoadBalancer services)
  ansible.builtin.set_fact:
    tools_ingress_hostname: "{{ tools_service_info.resources[0].spec.clusterIP }}"
  when:
    - tools_service_info.resources[0].spec.type in ["NodePort", "ClusterIP"]
    - tools_ingress_hostname is not defined

- name: Verify ingress endpoint was found
  ansible.builtin.fail:
    msg: "No hostname or IP found for ingress controller"
  when:
    - tools_ingress_hostname is not defined
