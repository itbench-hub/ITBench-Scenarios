---
- name: Create the release namespace
  kubernetes.core.k8s:
    kubeconfig: "{{ tools_cluster.kubeconfig }}"
    resource_definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ helm_release.namespace }}"
        labels:
          it-bench/monitoring: "true"
    state: present
  when:
    - tools_cluster.platform == "kubernetes"

- name: Install Nginx Ingress
  kubernetes.core.helm:
    chart_ref: ingress-nginx
    chart_repo_url: https://kubernetes.github.io/ingress-nginx
    chart_version: 4.13.0
    kubeconfig: "{{ tools_cluster.kubeconfig }}"
    release_name: "{{ helm_release.name }}"
    release_namespace: "{{ helm_release.namespace }}"
    release_state: present
    timeout: 10m0s
    values:
      controller:
        addHeaders:
          "X-Content-Type-Options": nosniff
          "X-Frame-Options": DENY
          "X-XSS-Protection": "0"
          "Strict-Transport-Security": max-age=31536000; includeSubDomains; preload
          "Content-Security-Policy": "img-src 'self' data:; connect-src 'self'; font-src 'self'; object-src 'none'; form-action 'none'; frame-ancestors 'none'"
          "Cross-Origin-Resource-Policy": same-origin
          "Referrer-Policy": strict-origin-when-cross-origin
        config:
          server-tokens: "false"
        service:
          type: "{{ 'NodePort' if (tools_cluster.provider == 'kind') else 'LoadBalancer' }}"
        metrics:
          enabled: "{{ tools_required.prometheus }}"
          serviceMonitor:
            enabled: "{{ tools_required.prometheus }}"
    wait: true
  when:
    - tools_cluster.platform == "kubernetes"

- name: Create Ingress objects for Observability Stack
  kubernetes.core.k8s:
    kubeconfig: "{{ tools_cluster.kubeconfig }}"
    resource_definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: "{{ item.name }}"
        namespace: "{{ item.namespace }}"
        annotations: "{{ item.annotations }}"
      spec:
        ingressClassName: nginx
        rules:
          - http:
              paths:
                - pathType: ImplementationSpecific
                  path: "{{ item.path }}"
                  backend:
                    service: "{{ item.service }}"
    state: present
  loop:
    - enabled: "{{ tools_required.clickhouse }}"
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      name: "{{ tools_helm_releases.clickhouse.name }}"
      namespace: "{{ tools_helm_releases.clickhouse.namespace }}"
      path: /clickhouse(/|$)(.*)
      service:
        name: "{{ tools_helm_releases.clickhouse.name }}-clickhouse"
        port:
          number: 8123
    - enabled: "{{ tools_required.jaeger }}"
      annotations: {}
      name: jaeger
      namespace: "{{ tools_helm_releases.opentelemetry_collectors.namespace }}"
      path: /jaeger
      service:
        name: jaeger-collector
        port:
          number: 16686
    - enabled: "{{ tools_required.opencost }}"
      annotations: {}
      name: "{{ tools_helm_releases.opencost.name }}"
      namespace: "{{ tools_helm_releases.opencost.namespace }}"
      path: /
      service:
        name: opencost
        port:
          number: 9090
    - enabled: "{{ tools_required.prometheus }}"
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      name: "{{ tools_helm_releases.prometheus.name }}"
      namespace: "{{ tools_helm_releases.prometheus.namespace }}"
      path: /prometheus(/|$)(.*)
      service:
        name: "{{ tools_helm_releases.prometheus.name }}-kube-prometheus-prometheus"
        port:
          number: 9090
  loop_control:
    label: "{{ item.name }}"
  when:
    - tools_cluster.platform == "kubernetes"
    - item.enabled

- name: Create Route objects for Observability Stack
  kubernetes.core.k8s:
    kubeconfig: "{{ tools_cluster.kubeconfig }}"
    resource_definition:
      apiVersion: route.openshift.io/v1
      kind: Route
      metadata:
        name: "{{ item.name }}"
        namespace: "{{ item.namespace }}"
      spec:
        httpHeaders:
          actions:
            response: "{{ lookup('ansible.builtin.file', 'files/openshift/route-response-actions.yaml') | from_yaml }}"
        port:
          targetPort: "{{ item.port }}"
        to:
          kind: Service
          name: "{{ item.service }}"
    state: present
  loop:
    - enabled: "{{ tools_required.clickhouse }}"
      name: "{{ tools_helm_releases.clickhouse.name }}"
      namespace: "{{ tools_helm_releases.clickhouse.namespace }}"
      port: 8123
      service: "{{ tools_helm_releases.clickhouse.name }}-clickhouse"
    - enabled: "{{ tools_required.jaeger }}"
      name: jaeger
      namespace: "{{ tools_helm_releases.opentelemetry_collectors.namespace }}"
      port: 16686
      service: jaeger-collector
    - enabled: "{{ tools_required.opencost }}"
      name: "{{ tools_helm_releases.opencost.name }}"
      namespace: "{{ tools_helm_releases.opencost.namespace }}"
      port: 9090
      service: "{{ tools_helm_releases.opencost.name }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - tools_cluster.platform == "openshift"
    - item.enabled
