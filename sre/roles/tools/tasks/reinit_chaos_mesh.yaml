---
- name: Retrieve all CRDs
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    kubeconfig: "{{ tools_cluster.kubeconfig }}"
  register: tools_crd_info

- name: Get all instances of each chaos-mesh resource type
  kubernetes.core.k8s_info:
    kubeconfig: "{{ tools_cluster.kubeconfig }}"
    api_version: "{{ item.spec.group }}/{{ item.spec.versions[0].name }}"
    kind: "{{ item.spec.names.kind }}"
  loop: "{{ tools_crd_info.resources |  selectattr('spec.group', '==', 'chaos-mesh.org') }}"
  loop_control:
    label: "{{ item.metadata.name }}"
  register: tools_chaos_mesh_resources_info

- name: Flatten all chaos-mesh instances into single list
  ansible.builtin.set_fact:
    tools_chaos_mesh_instances: "{{ tools_chaos_mesh_resources_info | selectattr('resources', 'defined') | map(attribute='resources') | flatten | list }}"

- name: Remove finalizers from chaos-mesh resources
  kubernetes.core.k8s:
    kubeconfig: "{{ tools_cluster.kubeconfig }}"
    resource_definition:
      apiVersion: "{{ item.apiVersion }}"
      kind: "{{ item.kind }}"
      metadata:
        name: "{{ item.metadata.name }}"
        namespace: "{{ item.metadata.namespace }}"
        finalizers: []
    state: present
  loop: "{{ tools_chaos_mesh_instances }}"
  loop_control:
    label: "{{ item.kind }}/{{ item.metadata.name }}"

- name: Delete each chaos-mesh resource instance
  kubernetes.core.k8s:
    kubeconfig: "{{ tools_cluster.kubeconfig }}"
    resource_definition:
      apiVersion: "{{ item.apiVersion }}"
      kind: "{{ item.kind }}"
      metadata:
        name: "{{ item.metadata.name }}"
        namespace: "{{ item.metadata.namespace | default(omit) }}"
    state: absent
  loop: "{{ tools_chaos_mesh_instances }}"
  loop_control:
    label: "{{ item.kind }}/{{ item.metadata.name }}"
