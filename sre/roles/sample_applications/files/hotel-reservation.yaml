apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: hotel-reservation-alerting-rules
spec:
  groups:
    - name: ClusterAlerts
      interval: 1m
      rules:
        - alert: FailedPodsDetected
          expr: sum by(namespace) (kube_pod_status_phase{namespace="hotel-reservation", phase="Failed"}) > 0
          labels:
            severity: critical
          annotations:
            description: 'Pods in failed state in namespace {{ $labels.namespace }} is above 0 (current value: {{ $value }})'
        - alert: PendingPodsDetected
          expr: sum by(namespace) (kube_pod_status_phase{namespace="hotel-reservation", phase="Pending"}) > 0
          labels:
            severity: critical
          annotations:
            description: 'Pods in pending state in namespace {{ $labels.namespace }} above 0 (current value: {{ $value }})'
    - name: CostAlerts
      interval: 1m
      rules:
        - alert: CPUSpend
          expr: sum by (exported_namespace) (exported_container_exported_namespace_node:container_cpu_allocation_cost_per_node:avg5m{exported_container!="wrk2-hotel-reservation", exported_namespace="hotel-reservation"}) > 0.03
          for: 1m
          labels:
            severity: warning
          annotations:
            description: '{{ $labels.exported_namespace }} has exceeded the allocated budget for vCPU for 5m (current value: ${{ $value }})'
        - alert: MemorySpend
          expr: sum by (exported_namespace) (exported_container_exported_namespace_node:container_memory_allocation_gigabytes_cost_per_node:avg5m{exported_container!="wrk2-hotel-reservation", exported_namespace="hotel-reservation"}) > 0.009
          for: 1m
          labels:
            severity: warning
          annotations:
            description: '{{ $labels.exported_namespace }} has exceeded the allocated budget for RAM for 5m (current value: ${{ $value }})'
    - name: EfficiencyAlerts
      interval: 1m
      rules:
        - alert: CPUEfficiency
          expr: avg by (container, namespace) (container_namespace:container_cpu_usage_seconds_per_requests:ratio_irate5m{container!="wrk2-hotel-reservation", namespace="hotel-reservation"}) * 100 < 85
          for: 1m
          labels:
            severity: info
          annotations:
            description: '{{ $labels.container }} in {{ $labels.namespace }} has a cpu efficiency below 85% for 5m (current value: {{ $value }}%)'
        - alert: MemoryEfficiency
          expr: avg by (container, namespace) (container_namespace:container_memory_working_set_bytes_per_requests_bytes:ratio_avg5m{container!="wrk2-hotel-reservation", namespace="hotel-reservation"}) * 100 < 70
          for: 1m
          labels:
            severity: info
          annotations:
            description: '{{ $labels.container }} in {{ $labels.namespace }} has a memory efficiency below 70% for 5m (current value: {{ $value }}%)'
    - name: GoldenSignalAlerts
      interval: 1m
      rules:
        - alert: RequestLatency
          expr: histogram_quantile(0.95, sum by(le, service_name, namespace) (rate(traces_span_metrics_duration_milliseconds_bucket{service_name!~"wrk2-hotel-reservation"}[2m]))) > 1500
          for: 1m
          labels:
            severity: warning
          annotations:
            description: 'Latency in service {{ $labels.service_name }} in namespace {{ $labels.namespace }} is above 1500ms (current value: {{ $value }}s)'
        - alert: RequestErrorRate
          expr: sum by (service_name, namespace) (irate(traces_span_metrics_calls_total{status_code="STATUS_CODE_ERROR", service_name!~"wrk2-hotel-reservation"}[2m])) > 0
          for: 1m
          labels:
            severity: warning
          annotations:
            description: 'Request error rate in service {{ $labels.service_name }} in namespace {{ $labels.namespace }} is above 0 (current value: {{ $value }})'
