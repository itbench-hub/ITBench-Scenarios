---
- name: Import variable setting tasks
  ansible.builtin.import_tasks:
    file: set_awx_controller_host.yaml

- name: Import variable setting tasks
  ansible.builtin.import_tasks:
    file: set_awx_controller_password.yaml

- name: Create workflow for starting incidents
  awx.awx.workflow_job_template:
    ask_variables_on_launch: true
    controller_host: "{{ awx_controller_host }}"
    controller_password: "{{ awx_controller_password }}" # pragma: allowlist secret
    controller_username: admin
    name: "Start Incident {{ incident }}"
    state: present
    workflow_nodes:
      - identifier: node-install-observability-stack
        unified_job_template:
          name: "Incident {{ incident }}: Deploy Tools"
          type: job_template
        related:
          success_nodes:
            - identifier: node-install-sample-application
          failure_nodes:
            - identifier: node-capture-failed-deployment
          always_nodes: []
      - identifier: node-install-sample-application
        unified_job_template:
          name: "Incident {{ incident }}: Deploy Applications"
          type: job_template
        related:
          success_nodes:
            - identifier: node-telemetry-access
          failure_nodes:
            - identifier: node-capture-failed-deployment
          always_nodes: []
      - identifier: node-telemetry-access
        unified_job_template:
          name: "Scenario-{{ incident }}--Setup-For-Telemetry-Access"
          type: job_template
        related:
          success_nodes:
            - identifier: node-trace-gathering
          failure_nodes:
            - identifier: node-capture-failed-deployment
      - identifier: node-trace-gathering
        unified_job_template:
          name: "Scenario-{{ incident }}--Trace-Gathering"
          type: job_template
        related:
          success_nodes:
            - identifier: node-trigger-fault
          failure_nodes:
            - identifier: node-capture-failed-deployment
          always_nodes: []
      - identifier: node-trigger-fault
        unified_job_template:
          name: "Incident {{ incident }}: Inject Faults"
          type: job_template
        related:
          success_nodes:
            - identifier: node-post-fault-injection
          failure_nodes:
            - identifier: node-capture-failed-deployment
          always_nodes: []
      - identifier: node-post-fault-injection
        unified_job_template:
          name: "Scenario-{{ incident }}--Post-Fault-Injection"
          type: job_template
        related:
          success_nodes:
            - identifier: node-check-for-alerts
          failure_nodes:
            - identifier: node-capture-failed-deployment
          always_nodes: []
      - identifier: node-check-for-alerts
        unified_job_template:
          name: "Scenario-{{ incident }}--Check-for-Alerts"
          type: job_template
        related:
          success_nodes:
            - identifier: node-alert-recorder-on
          failure_nodes:
            - identifier: node-capture-failed-deployment
          always_nodes: []
      - identifier: node-alert-recorder-on
        unified_job_template:
          name: "Scenario-{{ incident }}--Alert-Recorder-On"
          type: job_template
        related:
          success_nodes:
            - identifier: node-handover-to-agent
          failure_nodes:
            - identifier: node-capture-failed-deployment
          always_nodes: []
      - identifier: node-handover-to-agent
        unified_job_template:
          name: "Scenario-{{ incident }}--Handover-To-Agent"
          type: job_template
        related:
          success_nodes: []
          failure_nodes:
            - identifier: node-capture-failed-deployment
          always_nodes: []
      - identifier: node-capture-failed-deployment
        unified_job_template:
          name: "Scenario-{{ incident }}--Capture-Failed-Deployment"
          type: job_template
        related:
          success_nodes: []
          failure_nodes: []
          always_nodes: []

- name: Create workflow for stopping incidents
  awx.awx.workflow_job_template:
    ask_variables_on_launch: true
    controller_host: "{{ awx_controller_host }}"
    controller_password: "{{ awx_controller_password }}" # pragma: allowlist secret
    controller_username: admin
    name: "Stop Incident {{ incident }}"
    state: present
    workflow_nodes:
      - identifier: node-remove-fault
        unified_job_template:
          name: "Incident {{ incident }}: Remove Faults"
          type: job_template
        related:
          success_nodes: []
          failure_nodes: []
          always_nodes:
            - identifier: node-uninstalling-k8s-resources-default-namespace
      - identifier: node-uninstalling-k8s-resources-default-namespace
        unified_job_template:
          name: "Scenario-{{ incident }}--Uninstalling-K8s-Resources-Default-Namespace"
          type: job_template
        related:
          success_nodes: []
          failure_nodes: []
          always_nodes:
            - identifier: node-alert-recorder-off
      - identifier: node-alert-recorder-off
        unified_job_template:
          name: "Scenario-{{ incident }}--Alert-Recorder-Off"
          type: job_template
        related:
          success_nodes: []
          failure_nodes: []
          always_nodes:
            - identifier: node-uninstall-sample-application-end
      - identifier: node-uninstall-sample-application-end
        unified_job_template:
          name: "Incident {{ incident }}: Undeploy Applications"
          type: job_template
        related:
          success_nodes: []
          failure_nodes: []
          always_nodes:
            - identifier: node-uninstall-observability-stack-end
      - identifier: node-uninstall-observability-stack-end
        unified_job_template:
          name: "Incident {{ incident }}: Undeploy Tools"
          type: job_template
        related:
          success_nodes: []
          failure_nodes: []
          always_nodes: []
