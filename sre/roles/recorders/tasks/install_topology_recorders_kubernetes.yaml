---
- name: Import tools role for variable setting tasks
  ansible.builtin.import_role:
    name: tools
    tasks_from: set_kubernetes_topology_monitor_endpoint
  vars:
    tools_cluster:
      kubeconfig: "{{ recorders_cluster.kubeconfig }}"
      platform: "{{ recorders_cluster.platform }}"

- name: Create ConfigMap with Python script
  kubernetes.core.k8s:
    kubeconfig: "{{ recorders_cluster.kubeconfig }}"
    resource_definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: topology-recorder-kubernetes-scripts
        namespace: "{{ recorders_namespace.name }}"
      data:
        deps: "{{ lookup('ansible.builtin.file', 'files/topology/kubernetes/scripts/requirements.txt') }}"
        script: "{{ lookup('ansible.builtin.file', 'files/topology/kubernetes/scripts/gather.py') }}"
    state: present

- name: Install Kubernetes Topology Recorder
  kubernetes.core.k8s:
    kubeconfig: "{{ recorders_cluster.kubeconfig }}"
    namespace: "{{ recorders_namespace.name }}"
    src: files/topology/kubernetes/statefulset.yaml
    state: present

- name: Update Kubernetes Topology Recorder environment variables
  kubernetes.core.k8s:
    kubeconfig: "{{ recorders_cluster.kubeconfig }}"
    resource_definition:
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: kubernetes-topology-recorder
        namespace: "{{ recorders_namespace.name }}"
      spec:
        template:
          spec:
            containers:
              - name: recorder
                env:
                  - name: KUBERNETES_TOPOLOGY_MONITOR_ENDPOINT
                    value: "{{ tools_kubernetes_topology_mapper_endpoint }}"
    state: patched
  when:
    - tools_kubernetes_topology_mapper_endpoint is defined

- name: Wait for workload to update
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: StatefulSet
    kubeconfig: "{{ recorders_cluster.kubeconfig }}"
    name: kubernetes-topology-recorder
    namespace: "{{ recorders_namespace.name }}"
  register: recorders_statefulset_info
  until:
    - recorders_statefulset_info.resources | length > 0
    - recorders_statefulset_info.resources[0].status is defined
    - recorders_statefulset_info.resources[0].status.readyReplicas is defined
    - recorders_statefulset_info.resources[0].status.readyReplicas == 1
  retries: 8
  delay: 15
