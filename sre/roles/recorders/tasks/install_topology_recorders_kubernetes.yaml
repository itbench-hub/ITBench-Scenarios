---
- name: Import tools role for variable setting tasks
  ansible.builtin.import_role:
    name: tools
    tasks_from: set_kubernetes_topology_monitor_endpoint
  vars:
    tools_cluster:
      kubeconfig: "{{ recorders_cluster.kubeconfig }}"
      platform: "{{ recorders_cluster.platform }}"

- name: Load statefulset information
  ansible.builtin.set_fact:
    recorders_kubernetes_statefulset: "{{ lookup('ansible.builtin.file', 'files/topology/kubernetes/statefulset.yaml') | from_yaml }}"

- name: Create ConfigMap with Python script
  kubernetes.core.k8s:
    kubeconfig: "{{ recorders_cluster.kubeconfig }}"
    namespace: "{{ recorders_namespace.name }}"
    template: templates/topology/kubernetes/configmap.j2
    state: present
  vars:
    python_script_file_contents: "{{ lookup('ansible.builtin.file', 'files/topology/kubernetes/scripts/gather.py') }}"
    requirements_file_contents: "{{ lookup('ansible.builtin.file', 'files/topology/kubernetes/scripts/requirements.txt') }}"

- name: Install Kubernetes Topology Recorder
  kubernetes.core.k8s:
    kubeconfig: "{{ recorders_cluster.kubeconfig }}"
    namespace: "{{ recorders_namespace.name }}"
    template: templates/topology/kubernetes/statefulset.j2
    state: present
  register: recorders_kubernetes_workload
  vars:
    container_image: "{{ recorders_kubernetes_statefulset.spec.template.spec.containers[0].image }}"
    container_environment_variables:
      - name: KUBERNETES_TOPOLOGY_MONITOR_ENDPOINT
        value: "{{ tools_kubernetes_topology_mapper_endpoint }}"

- name: Wait for workload to update
  kubernetes.core.k8s_info:
    api_version: "{{ recorders_kubernetes_workload.result.apiVersion }}"
    kind: "{{ recorders_kubernetes_workload.result.kind }}"
    kubeconfig: "{{ recorders_cluster.kubeconfig }}"
    name: "{{ recorders_kubernetes_workload.result.metadata.name }}"
    namespace: "{{ recorders_kubernetes_workload.result.metadata.namespace }}"
  register: recorders_kubernetes_statefulset_info
  until:
    - recorders_kubernetes_statefulset_info.resources | length > 0
    - recorders_kubernetes_statefulset_info.resources[0].status is defined
    - recorders_kubernetes_statefulset_info.resources[0].status.readyReplicas is defined
    - recorders_kubernetes_statefulset_info.resources[0].status.readyReplicas == 1
  retries: 8
  delay: 15
