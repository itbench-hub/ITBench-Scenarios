---
- name: Import status file creation tasks
  ansible.builtin.import_tasks:
    file: create_status.yaml
  tags:
    - install_tools

- name: Import load tasks
  ansible.builtin.import_tasks:
    file: store_status_file.yaml
  tags:
    - always

- name: Perform update tasks
  when:
    - leaderboard_current_assertion is defined
    - leaderboard_current_status is defined
  block:
    - name: Import status file update tasks
      ansible.builtin.import_tasks:
        file: update_status_install_tools.yaml
      tags:
        - install_tools

    - name: Import status file update tasks
      ansible.builtin.import_tasks:
        file: update_status_reinit_tools.yaml
      tags:
        - reinit_tools

    - name: Import status file update tasks
      ansible.builtin.import_tasks:
        file: update_status_install_applications.yaml
      tags:
        - install_applications

    - name: Import status file update tasks
      ansible.builtin.import_tasks:
        file: update_status_inject_faults.yaml
      tags:
        - inject_faults

    - name: Import status file update tasks
      ansible.builtin.import_tasks:
        file: update_status_remove_faults.yaml
      tags:
        - remove_faults

    - name: Import status file update tasks
      ansible.builtin.import_tasks:
        file: update_status_install_recorders.yaml
      tags:
        - install_recorders

    - name: Import status file update tasks
      ansible.builtin.import_tasks:
        file: update_status_uninstall_recorders.yaml
      tags:
        - uninstall_recorders

    - name: Import status file update tasks
      ansible.builtin.import_tasks:
        file: update_status_uninstall_applications.yaml
      tags:
        - uninstall_applications

    - name: Import status file update tasks
      ansible.builtin.import_tasks:
        file: update_status_uninstall_tools.yaml
      tags:
        - uninstall_tools

    - name: Update assertion file with new condition ({{ leaderboard_status.status }})
      ansible.builtin.copy:
        content: |
          {{
            leaderboard_current_assertion |
            combine({'status': {'conditions': leaderboard_status_conditions}}) |
            to_nice_json(indent=2)
          }}
        dest: "/tmp/assertion.json"
        mode: "0644"
      tags:
        - always
      when:
        - leaderboard_status_conditions is defined

    - name: Update status file with new event ({{ leaderboard_status.status }})
      ansible.builtin.copy:
        content: "{{ leaderboard_current_status | combine({'events': leaderboard_status_events}) | to_nice_json }}"
        dest: "/tmp/status.json"
        mode: "0644"
      tags:
        - always
      when:
        - leaderboard_status_events is defined
  always:
<<<<<<< HEAD
    - name: Ensure local directory exists
      ansible.builtin.file:
        path: "{{ leaderboard_storage.local.directory }}"
        state: directory
        mode: "0755"
        recurse: true
      tags:
        - always
      when:
        - leaderboard_storage.local is defined
        - leaderboard_status_conditions is defined

    - name: Copy assertion file into local directory
      ansible.builtin.copy:
        dest: "{{ leaderboard_storage.local.directory }}/assertion.json"
        mode: "0644"
        src: /tmp/assertion.json
=======
    - name: Import store tasks
      ansible.builtin.import_tasks:
        file: store_status_file.yaml
>>>>>>> c6e3713 (feat: load status from storage - particularly for AWX pipeline)
      tags:
        - always
