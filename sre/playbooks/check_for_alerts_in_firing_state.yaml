---
- name: Check if alerts in firing state are present
  hosts:
    - environment
  pre_tasks:
    - name: Import system role
      ansible.builtin.import_role:
        name: system
      tags:
        - always
      vars:
        system_cluster:
          kubeconfig: "{{ cluster.kubeconfig }}"

    - name: Import cluster role
      ansible.builtin.import_role:
        name: cluster
      tags:
        - always
      vars:
        cluster_files:
          kubeconfig: "{{ cluster.kubeconfig }}"
        cluster_tools_enabled:
          oc: "{{ system_oc_exists }}"
  tasks:
    - name: Import tools role for variable setting tasks
      ansible.builtin.import_role:
        name: tools
        tasks_from: set_ingress_hostname
      vars:
        tools_cluster:
          kubeconfig: "{{ cluster.kubeconfig }}"

    - name: Call the Prometheus Alerts API until alerts in firing state are detected
      ansible.builtin.uri:
        url: http://{{ ingress_hostname }}/prometheus/api/v1/alerts
        method: GET
        return_content: true
        body_format: json
        headers:
          Content-Type: "application/json"
      register: alerts_api_result
      retries: 30
      delay: 15
      until:
        - alerts_api_result.status == 200
        - alerts_api_result.json is defined
        - alerts_api_result.json.data is defined
        - alerts_api_result.json.data.alerts is defined
        - alerts_api_result.json.data.alerts | selectattr('state', '==', 'firing') | list | length > 0
      when:
        - ingress_hostname is defined

    - name: Display firing alerts found
      ansible.builtin.debug:
        msg: Found {{ alerts_api_result.json.data.alerts | selectattr('state', '==', 'firing') | list | length }} firing alerts
      when:
        - alerts_api_result is defined
        - alerts_api_result.json is defined
