---
- name: Manage SRE and FinOps Incident (Fault Stack)
  hosts:
    - environment
  pre_tasks:
    - name: Ensure incident file is defined
      ansible.builtin.assert:
        that: incident_id is defined
        fail_msg: incident_id is not defined. Please run playbook with variable defined via CLI arguments.
        success_msg: incident_id is defined.
      tags:
        - always

    - name: Import system role
      ansible.builtin.import_role:
        name: system
      tags:
        - always
      vars:
        system_cluster:
          kubeconfig: "{{ cluster.kubeconfig }}"

    - name: Import cluster role
      ansible.builtin.import_role:
        name: cluster
      tags:
        - always
      vars:
        cluster_files:
          kubeconfig: "{{ cluster.kubeconfig }}"
        cluster_tools_enabled:
          oc: "{{ system_oc_exists }}"

    - name: Import variables for incident
      ansible.builtin.import_role:
        name: incidents
      tags:
        - always
      vars:
        incidents_file:
          id: "{{ incident_id }}"
  tasks:
    - name: Import required roles
      block:
        - name: Import leaderboard role
          ansible.builtin.import_role:
            name: leaderboard
          vars:
            leaderboard_status:
              status: progressing
            leaderboard_storage: "{{ storage }}"

        - name: Import recorders role
          ansible.builtin.import_role:
            name: recorders
          vars:
            recorders_cluster:
              kubeconfig: "{{ cluster.kubeconfig }}"
              platform: "{{ cluster_platform }}"
            recorders_enabled:
              alerts:
                prometheus: "{{ tools_enabled.prometheus }}"
              topology:
                kubernetes: "{{ tools_enabled.kubernetes_topology_monitor }}"

        # - name: Import e2e role
        #   ansible.builtin.import_role:
        #     name: e2e
        #     tasks_from: record_topology_information
        #   tags:
        #     - pre_fault_removal
        #   when:
        #     - incident.runner != 'local'

        - name: Import faults role
          ansible.builtin.import_role:
            name: faults
          vars:
            faults_cluster:
              kubeconfig: "{{ cluster.kubeconfig }}"
            faults_specs: "{{ incidents_spec.spec.faults }}"

        # - name: Import e2e role
        #   ansible.builtin.import_role:
        #     name: e2e
        #     tasks_from: record_topology_information
        #   tags:
        #     - post_fault_injection
        #   when:
        #     - incident.runner != 'local'

        # - name: Import e2e role
        #   ansible.builtin.import_role:
        #     name: e2e
        #     tasks_from: register_fault_injection_time
        #   tags:
        #     - inject_faults
        #   when:
        #     - incident.runner != 'local'

        - name: Import leaderboard role
          ansible.builtin.import_role:
            name: leaderboard
          vars:
            leaderboard_status:
              status: succeeded
            leaderboard_storage: "{{ storage }}"
      rescue:
        - name: Import leaderboard role
          ansible.builtin.import_role:
            name: leaderboard
          vars:
            leaderboard_status:
              failed_task:
                name: "{{ ansible_failed_task.name }}"
                result: "{{ ansible_failed_result }}"
              status: failed
            leaderboard_storage: "{{ storage }}"

        - name: Fail playbook
          ansible.builtin.fail:
            msg: "Task ({{ ansible_failed_task.name }}) has failed: {{ ansible_failed_result }}"
