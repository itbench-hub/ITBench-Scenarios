---
- name: Manage SRE and FinOps Incident Environment Tool Stack
  hosts:
    - environment
  pre_tasks:
    - name: Import system role
      ansible.builtin.import_role:
        name: system
      tags:
        - always
      vars:
        system_cluster:
          kubeconfig: "{{ cluster.kubeconfig }}"

    - name: Validate that storage is configured
      ansible.builtin.assert:
        that: "storage.local is defined or storage.s3 is defined"
        fail_msg: Storage has not been configured. Please assign either local or s3 bucket storage.
        success_msg: Storage is configured.
  tasks:
    - name: Include Helm Release variables from tools role
      ansible.builtin.include_vars:
        file: ../roles/tools/defaults/main/helm_releases.yaml

    - name: Get Service object for the Ingress controller
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Service
        name: "{{ tools_helm_releases.ingress.name }}"
        namespace: "{{ tools_helm_releases.ingress.namespace }}"
        kubeconfig: "{{ cluster.kubeconfig }}"
        wait: true
      register: service_info
      until:
        - service_info.resources[0].status.loadBalancer.ingress is defined
      delay: 15
      retries: 12

    - name: Extract the Ingress hostname information
      ansible.builtin.set_fact:
        ingress_hostname: "{{ service_info.resources[0].status.loadBalancer.ingress[0].hostname }}"
      when:
        - service_info.resources[0].status.loadBalancer.ingress | length > 0
        - service_info.resources[0].status.loadBalancer.ingress[0].hostname is defined

    - name: Copy restricted kubeconfig into temporary directory from S3 bucket
      amazon.aws.s3_object:
        endpoint_url: "{{ storage.s3.endpoint }}"
        bucket: "{{ storage.s3.bucket }}"
        object: "/{{ storage.s3.directory }}/kubeconfig"
        dest: /tmp/kubeconfig
        mode: get
      register: bucket_retrieval_result
      until:
        - bucket_retrieval_result.contents != ""
      retries: 3
      delay: 60
      when:
        - storage.s3 is defined

    - name: Copy restricted kubeconfig into temporary directory from local directory
      ansible.builtin.copy:
        dest: /tmp/kubeconfig
        mode: "0644"
        src: "{{ storage.local.directory }}/kubeconfig"
      when:
        - storage.local is defined

    - name: Print agent bundle
      ansible.builtin.debug:
        msg: |
          {{
            {
              "prometheus_url": "http://" + ingress_hostname + "/prometheus",
              "kubeconfig": lookup("ansible.builtin.file", "/tmp/kubeconfig")
            }
          }}
      vars:
        restricted_kubeconfig_exists: "{{ '/tmp/kubeconfig' is exists }}"
      when:
        - ingress_hostname is defined
        - restricted_kubeconfig_exists
