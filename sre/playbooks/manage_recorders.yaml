---
- name: Manage SRE and FinOps Incident Data Recorder Stack
  hosts:
    - environment
  pre_tasks:
    - name: Import system role
      ansible.builtin.import_role:
        name: system
      tags:
        - always
      vars:
        system_cluster:
          kubeconfig: "{{ cluster.kubeconfig }}"

    - name: Import cluster role
      ansible.builtin.import_role:
        name: cluster
      tags:
        - always
      vars:
        cluster_files:
          kubeconfig: "{{ cluster.kubeconfig }}"
        cluster_tools_enabled:
          oc: "{{ system_oc_exists }}"

    - name: Import variables for incident
      ansible.builtin.import_role:
        name: incidents
        tasks_from: load
      tags:
        - always
      vars:
        incidents_file:
          id: "{{ incident_id }}"
      when:
        - incident_id is defined

    - name: Create tools_enabled dictionary
      ansible.builtin.set_fact:
        tools_enabled:
          chaos_mesh: "{{ tools.chaos_mesh | default(false) }}"
          clickhouse: "{{ tools.clickhouse | default(false) }}"
          ingress: "{{ tools.ingress | default(false) }}"
          jaeger: "{{ tools.jaeger | default(false) }}"
          kubernetes_metrics_server: "{{ tools.kubernetes_metrics_server | default(false) }}"
          kubernetes_topology_monitor: "{{ tools.kubernetes_topology_monitor | default(false) }}"
          opencost: "{{ tools.opencost | default(false) }}"
          opensearch: "{{ tools.opensearch | default(false) }}"
          opentelemetry: "{{ tools.opentelemetry | default(false) }}"
          prometheus: "{{ tools.prometheus | default(false) }}"
      tags:
        - always
      when:
        - incident_id is undefined
  tasks:
    - name: Import recorders role
      ansible.builtin.import_role:
        name: recorders
      vars:
        recorders_cluster:
          kubeconfig: "{{ cluster.kubeconfig }}"
          platform: "{{ cluster_platform }}"
        recorders_enabled:
          alerts:
            prometheus: "{{ tools_enabled.prometheus }}"
          topology:
            kubernetes: "{{ tools_enabled.kubernetes_topology_monitor }}"
          traces:
            jaeger: "{{ tools_enabled.jaeger }}"
